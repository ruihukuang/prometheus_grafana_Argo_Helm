name: Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.REGION }}  # Change to your AWS region

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name your-eks-cluster-name --region ${{ secrets.REGION }}

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Verify Helm Installation
      run: |
        helm version

    - name: Install Argo CD CLI
      run: |
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd

    - name: Create a Namespace for Argo CD
      run: |
        kubectl create namespace argocd

    - name: install Argo CD in your EKS cluster
      run: |
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: Access the Argo CD API Server
      run: |
        kubectl port-forward svc/argocd-server -n argocd 8080:443

    - name: Retrieve Argo CD Admin Password
      id: retrieve-password
      run: |
        export PASSWORD=$(kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server -o jsonpath='{.items[0].metadata.name}')
        echo "::set-output name=password::$PASSWORD"

    - name: Update Argo CD Admin Password
      id: update-password
      run: |
        NEW_PASSWORD=${{ secrets.NEW_ARGOCD_PASSWORD }}
        argocd account update-password --current-password ${{ steps.retrieve-password.outputs.password }} --new-password $NEW_PASSWORD

   # log into localhost:8080 Open a web browser and navigate to http://localhost:8080 Log in with the admin username and the new password you set.

    - name: Create a Namespace for Prometheus and Grafana
      run: |
        kubectl create namespace monitoring

    - name: Deploy Prometheus
      run: |
        kubectl apply -f prometheus.yaml

    - name: Deploy Grafana
      run: |
        kubectl apply -f grafana.yaml

    - name: Access Grafana locally
      run: |
        kubectl port-forward svc/my-grafana 3000:80 -n monitoring
    #Open your browser and go to http://localhost:3000 to access Grafana.
      
